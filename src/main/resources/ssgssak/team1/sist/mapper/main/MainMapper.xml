<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="ssgssak.team1.sist.mapper.main.MainMapper">
	<!-- <delete id="delete"> DELETE FROM tbl_board WHERE bno=#{bno} </delete> -->

<select id="getProList" resultType="MainProductListDTO">
      SELECT *
      FROM (
      SELECT ROWNUM no, t.*
      FROM (
      SELECT
      p.ID,
      MAX(p.SHIPPINGOPTIONID) AS SHIPPINGOPTIONID,
      MAX(p.sellerstoreid) AS   SELLERSTOREID,
      MAX(s.SELLERNAME) AS SELLERNAME,
      MAX(p.brandid) AS BRANDID,
      MAX(b.brandname) AS BRANDNAME,
      MAX(p.PDNAME) AS PDNAME,
      MAX(p.UPDATEDAY) AS UPDATEDAY,
      COALESCE(MAX(o.optionPrice), 0) AS optionPrice,
      COALESCE(MAX(o.optionPrice) - ((MAX(o.optionPrice) / 100) * MAX(c.spclDscnRt)), 0) AS sprice,
      COALESCE(MAX(c.spclDscnRt), 0) AS discount,
      COALESCE(MAX(reviewData.reviewCount), 0) AS reviewCount,
      COALESCE(MAX(reviewData.avgGrade), 0) AS avgGrade,
      MAX(productimg.IMGURL) AS imgurl
      FROM
      PRODUCT p
      JOIN BRAND b ON p.BRANDID = b.ID
      JOIN sellerstore s ON p.SELLERSTOREID = s.id
      LEFT JOIN productOption o ON p.ID = o.productid
      LEFT JOIN specialprice c ON p.specialPriceId = c.id
      LEFT JOIN (
      SELECT productId,
      COUNT(*) AS reviewCount, 
      AVG(grade) AS avgGrade
      FROM review
      GROUP BY productId
      ) reviewData ON p.ID = reviewData.productId
      LEFT JOIN (
        SELECT DISTINCT productid, IMGURL
        FROM productimg
        WHERE IMGCONTENT = 'sum' OR IMGCONTENT LIKE 'SUM'
        ) productimg ON p.id = productimg.productid
      WHERE TO_CHAR(p.CATEGORYID) LIKE #{catename} || '%'
      GROUP BY p.id

      ) t

      ) b
      WHERE no BETWEEN 1 AND 6
      
</select>

<select id="getProList1" resultType="MainProductListDTO">
      SELECT *
      FROM (
      SELECT ROWNUM no, t.*
      FROM (
      SELECT
      p.ID,
      MAX(p.SHIPPINGOPTIONID) AS SHIPPINGOPTIONID,
      MAX(p.sellerstoreid) AS   SELLERSTOREID,
      MAX(s.SELLERNAME) AS SELLERNAME,
      MAX(p.brandid) AS BRANDID,
      MAX(b.brandname) AS BRANDNAME,
      MAX(p.PDNAME) AS PDNAME,
      MAX(p.UPDATEDAY) AS UPDATEDAY,
      COALESCE(MAX(o.optionPrice), 0) AS optionPrice,
      COALESCE(MAX(o.optionPrice) - ((MAX(o.optionPrice) / 100) * MAX(c.spclDscnRt)), 0) AS sprice,
      COALESCE(MAX(c.spclDscnRt), 0) AS discount,
      COALESCE(MAX(reviewData.reviewCount), 0) AS reviewCount,
      COALESCE(MAX(reviewData.avgGrade), 0) AS avgGrade,
      MAX(productimg.IMGURL) AS imgurl
      FROM
      PRODUCT p
      JOIN BRAND b ON p.BRANDID = b.ID
      JOIN sellerstore s ON p.SELLERSTOREID = s.id
      LEFT JOIN productOption o ON p.ID = o.productid
      LEFT JOIN specialprice c ON p.specialPriceId = c.id
      LEFT JOIN (
      SELECT productId,
      COUNT(*) AS reviewCount, 
      AVG(grade) AS avgGrade
      FROM review
      GROUP BY productId
      ) reviewData ON p.ID = reviewData.productId
      LEFT JOIN (
        SELECT DISTINCT productid, IMGURL
        FROM productimg
        WHERE IMGCONTENT = 'sum' OR IMGCONTENT LIKE 'SUM'
        ) productimg ON p.id = productimg.productid
      WHERE TO_CHAR(p.CATEGORYID) LIKE #{catename} || '%'
      GROUP BY p.id

      ) t

      ) b
      WHERE no BETWEEN 1 AND 4
      
</select>
</mapper>